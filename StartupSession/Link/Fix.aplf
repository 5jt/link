 {linked}←where Fix src;callback;delete;file;link;name;nc;nosrc;ns;nsname;oldfile;oldname;this;watch
⍝ Fix a function/operator or script, preserving any existing source files
⍝   Used internally by EditorFix "afterfix" processing
⍝   May be called by other tools providing the source in ⎕NR/⎕SRC format on the right
⍝   One day, the left argument of (ns name) may be inferred, for now it must be provided
⍝ Returns 1 if a link was found for the name, else 0
⍝   NB: if 0 is returned, no ⎕FX/⎕FIX was done

 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf

 :Trap DEBUG↓0
     ⎕IO←1
     →(callback←'⎕SE.Link.OnAfterFix'≡⊃1↓⎕XSI)/NOHOLD ⍝ Can't hold in a high-priority callback (Editor AfterFix callback)
     :Hold '⎕SE.Link.Notify'
NOHOLD:
         nosrc←0=≢src
         (ns name oldname)←3↑where,'' ''
         oldname,←(0=≢oldname)/name ⍝ oldname not specified
         name,←(0=≢name)/oldname ⍝ name not specified
         this←⊃⎕RSI ⎕XSI U.ContainerNs ns
         nsname←⍕ns←this(0 U.GetRefTo)ns

         :If linked←~0∊⍴link←U.LookupRef ns

             :If callback ⋄ :AndIf 'none' 'dir'∊⍨⊂link.watch ⍝ Not watching the workspace
                 →0 ⍝ Ignore notification from editor
             :EndIf
             watch←(⊂link.watch)∊'both' 'dir'  ⍝ watching files

             (file oldfile nc)←link(0 U.DetermineFileName)nsname name oldname src  ⍝ fix in target ns

             :If callback∧(0≠≢oldfile)∧(oldname≢name)  ⍝ Repair damage done by editor on rename
                 (⊂ns.⎕NR oldname)⎕NPUT oldfile 1
                 :If ~watch  ⍝ FileSystemWatcher should do this for us
                     2 ns.⎕FIX'file://',oldfile
                 :EndIf
                 delete←0  ⍝ old file must be preserved
             :Else
                 delete←(0≠≢oldfile)∧(file≢oldfile)∧(name≡oldname)  ⍝ old file must be removed : file name was changed by beforeWrite or forceFilename or forceExtensions
             :EndIf

             :If nosrc    ⍝ Source not provided - find it
                 src←ns U.GetAplSource name
             :EndIf

             :If 3=link.(⎕NC beforeWrite)  ⍝ user callback on file write
                 →0 U.If~(⍎link.beforeWrite)'beforeWrite'link file(nsname,'.',name)nc(nsname,'.',oldname)src
             :EndIf

             :Trap 0
                 3 ⎕MKDIR 1⊃⎕NPARTS file ⍝ make sure folder is there
                 (⊂src)⎕NPUT file 1
             :Else
                 1 U.Resignal⍨' *** Fix: Unable to write "',nsname,'.'name,'" to file ',file
             :EndTrap

             :If ~watch  ⍝ bind name to new file unless the filewatcher does it for us
             :AndIf 2≠⌊nc ⍝ array must always pre-exist the call to ⎕SE.Link.Fix for now
                 :Trap 0
                     2 ns.⎕FIX'file://',file
                 :Else
                     1 U.Resignal⍨' *** Fix: Unable to re-fix "',nsname,'.'name,'" from file ',file
                 :EndTrap
             :EndIf

             :If delete  ⍝ old file must be removed
                 ⎕NDELETE oldfile
             :EndIf
         :EndIf
     :EndHold ⍝ 'Notify'
 :Else
     U.Resignal 1
 :EndTrap
