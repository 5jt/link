 (inFail fsw)←opts FixFiles target;aplnames;filenames;inx;mask;ndirs;source;target
 ⍝ Load items from files in folders
 ;list;hideBit;hidden;files;dirs;order;nss;⎕IO;exts;names
 ;RightExtn;Files;FixThere;TryFixThere
 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG↓0
     ⎕IO←1

     source←opts.dir ⋄ inFail←⍬
     list←0 1 6 ⎕NINFO⍠1⍠'Recurse' 1⊢source,'/*'     ⍝ recursive listing of everything

     hideBit←1=3⊃list                                ⍝ mask for hidden items
     hidden←⊃list U.Where¨⊂hideBit                   ⍝ list of hidden (files and) folders
     hidden,¨←'/'                                    ⍝ protect agains similarly named items
     list←list U.Where¨⊂~hideBit                     ⍝ keep only visible items
     list←list U.Where¨⊂~∨⌿hidden∘.U.Begins⊃list     ⍝ filter away things that come below hidden things
     list↓⍨←¯1                                       ⍝ remove hideBit column

     dirs←(⊃U.Where/1=@2⊢list)                       ⍝ second column has 1 for dirs
     dirs←((⊂opts.dir),{⍵[⍋⍵]}dirs),¨'/'             ⍝

     RightExtn←{⍺∊⍨⊂1↓⊃⌽⎕NPARTS ⍵}                   ⍝ Ends with specified extension?
     Files←{⍵ U.Where ⍺∘RightExtn¨⍵}                 ⍝ Those that end with specified extension
     exts←opts.(codeExtensions,customExtensions,⊢/typeExtensions) ⍝ all the interesting extensions
     files←exts Files⊃U.Where/2=@2⊢list              ⍝ second column has 2 for files; first column is filename
     order←⍋¯1@{9109=⍵}9999999@{47=⍵}↑⎕UCS¨files     ⍝ slashes after all chars and quads before all - in "descending" order into folders: must process parent folders first
     files←files[order]

     ndirs←≢dirs ⋄ files←dirs,files
     names←opts U.DetermineAplName¨files
     inFail,←(mask←¯1=⎕NC names)/files                ⍝ invalid names
     (files names)←(~mask)∘/¨(files names)            ⍝ keep only names that are valid
     ndirs←+/ndirs↑~mask

     ⍝ TODO : doesn't detect actual APL names after fixing...
     :If ∨/mask←(inx←⍳⍨names)≠(⍳≢names)
         files←files[,(mask/inx),[1.5]⍸mask]
         U.Error'Files produce clashing APL names:',⍕files
     :EndIf

     ⍝ TODO : should rename files if using opts.forceFilenames

     ⍝ create namespaces for directories and load quadVars.apln
     :If ~opts.flatten                               ⍝ If we are not flattening, create nss
         (dirs aplnames)←ndirs∘↑¨(files names)             ⍝ keep only names that are valid
         {}U.GetRefTo U.OnEach aplnames
     :EndIf

     ⍝ fix individual files
     (files aplnames)←ndirs∘↓¨(files names)           ⍝ keep only names that are valid
     FixThere←{ ⍝ Fix the file ⍵ in the namespace ⍺
         ⍺ QFix ⍵ opts                     ⍝ do it
     }
     TryFixThere←{      ⍝ Try to fix file there
         6 11::⍵        ⍝ return name on failure
         0⊣⍺ FixThere ⍵ ⍝ do it and return 0 on success
     }
     :If ~opts.flatten                               ⍝ If we are not flattening, create nss
         nss←⍎∘U.Parent U.OnEach aplnames
     :Else
         nss←target   ⍝ all files fixed in target namespace
     :EndIf
     inFail,←0~⍨nss TryFixThere U.OnEach files ⍝ try it and return only failures
      ⍝ return (list of failures) and (watcher reference or zilde)
     :If 'dir' 'both'∊⍨⊂opts.watch
         fsw←FileSystemWatcher.Watch(source)(,'*')
     :Else
         fsw←⍬
     :EndIf
     inFail←⍕¨inFail
 :Else
     U.Resignal 1
 :EndTrap
