 {ok}←WSLoaded;i;keep;links;msg;wslinks;link;diff;allOK;link_dir;is_link_dir;IsLink_dir
⍝ Action to be taken upon )LOAD or )CLEAR
 ok←0
 :Trap 0  ⍝ can't afford to error
     link_dir←{2 ⎕NQ #'GetEnvironment'⍵}¨'LINK_DIR' 'LINK_RUN'
     IsLink_dir←link_dir∘{⍵.dir∊⍥(1 ⎕NPARTS⊆)⍺}
     :If ∧/0≠≢¨link_dir
         ¯1 U.Log'Ignoring LINK_DIR and LINK_RUN because both are set:',⍕link_dir
         link_dir←''
     :Else
         link_dir←∊link_dir
     :EndIf
     :Hold '⎕SE.Link.Links'

         ⍝ retrieve saved workspace links before the GetLinks which may overwrite Store 0
         :If U.HASSTORE ⋄ :AndIf ⎕NULL≢wslinks←U.Store 0
         :Else ⋄ wslinks←⍬
         :EndIf

         ⍝ preserve old links to ⎕SE - drop the rest
         :If ~0∊⍴links←U.GetLinks
         ⍝ keep links in ⎕SE, but also LINK_DIR/LINK_RUN iff we're just starting now
         :AndIf 0∊keep←(⎕SE=U.RootOf⍎¨links.ns)∨(IsLink_dir links)∧~2∊⎕NC'⎕SE.Dyalog.Callbacks.loaded'
             ¯1 U.Log'Clearing # links:'(⍕(~keep)/links)
             Watcher.Break(~keep)/links
             links←keep/links
         :Else
             ¯1 U.Log'Nothing to clear'
         :EndIf

         ⍝ restore saved workspace links
         :If ~0∊⍴wslinks
             wslinks←⎕SE.Link.⎕NS¨wslinks  ⍝ avoid cross-ref between # and ⎕SE
             wslinks/⍨←~IsLink_dir wslinks  ⍝ ignore LINK_DIR
         :AndIf ~0∊⍴wslinks
             links,←wslinks
             wslinks.restored←1 ⋄ wslinks.fsw←⎕NULL  ⍝ fsw re-instancited by Resync
         :EndIf

         U.SetLinks links
     :EndHold

     allOK←0
     :Trap 0 ⍝ If diffs fail for any reason, bail out
         diff←0 4⍴0
         :For link :In wslinks.ns
             diff⍪←⎕SE.Link.Diff link
         :EndFor
         allOK←0=≢diff
     :EndTrap

     :If allOK
         links.restored←0 ⍝ No resync required
         :If 1=≢wslinks                    ⍝ LINK_DIR might provide 1 link:
         :AndIf ''≢link_dir                ⍝ must be set
         :AndIf IsLink_dir⊃⎕SE.Link.Links  ⍝ must match the requested dir when normalised
         :AndIf (,'#')≡⊃⎕SE.Link.Links.ns  ⍝ must go to hash
             ¯1 U.Log'Ignoring existing link to # caused by LINK_DIR=',link_dir
         :Else
             msg←(⍕≢wslinks),' link',('s '/⍨1≠≢wslinks),' restored: '
             U.Warn(⊂msg),(⍕¨wslinks.ns)
         :EndIf
     :ElseIf 0≠≢wslinks
         msg←(⍕≢wslinks),' namespaces',('s '/⍨1≠≢wslinks),' linked in this workspace: '
         'IMPORTANT'U.Warn(⊂msg),⍕¨wslinks.ns
         'IMPORTANT'U.Warn'Link.Resync is required to use anything other than Link.Status and Link.Diff'
     :Else
         ¯1 U.Log'No links found'
     :EndIf

     ok←1
 :Else
     ⎕←'Link.WSLoaded: Unable to clear links (',⎕DMX.(Message{⍵,⍺,⍨': '/⍨×≢⍺}EM),')'
 :EndTrap
