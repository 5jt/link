 msg←{opts}Export(src dest);array;container;defopts;dir;failed;fixed;nc;ns;ok;single;⎕IO;⎕ML
 ⎕IO ⎕ML←1 1
 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG↓0
     (container src)←⎕RSI ⎕XSI U.ContainerNs src

     (defopts←⎕NS ⍬).(overwrite array)←0 0
     opts←defopts U.DefaultOpts⍎⎕NS∘⍬⍣(900⌶⍬)⊢'opts' ⍝ monadic?
     :If ~opts.overwrite∊0 1 ⋄ U.Error'Invalid value ',(⍕opts.overwrite),' for modifier "overwrite" - must be one of: 0 1' ⋄ :EndIf
     :If ~(⊂array←opts.array)∊0 1
         array←,⊆,array
         :If ok←(1=≢⍴array)∧(2=|≡array)∧(0=2|⎕DR∊array)∧(1∧.=≢¨⍴¨array)
             array←','(≠⊆⊢)∊array,[1.5]','  ⍝ allow list of comma-separated names
             ok←0∊''∘≢¨0⍴¨array
         :EndIf
         :If ~ok ⋄ U.Error'Invalid value ',(⍕opts.array),' for modifier "array" - must be 0, 1 or a list of comma-separated names' ⋄ :EndIf
         array←container U.NormName¨array
     :EndIf

     :If 0 ¯1∊⍨⌊nc←container U.NameClass src
         U.Error'Source not found: ',src
     :ElseIf U.Slash⊃⌽src
         U.Error'Trailing slash reserved for future extension'
     :Else
         :If single←¯9.1≠nc ⋄ :AndIf opts U.HasExtn dest  ⍝ dest is a file
             dir←⊃⎕NPARTS dest←0 U.NormFile dest
         :Else                                            ⍝ dest is a directory
             dir←dest←0 U.NormDir dest
         :EndIf
         :If single
             ns←⊃U.SplitNs src←container U.NormName src
             array←1   ⍝ always export single array
         :Else
             ns←src←U.NormNs src                      ⍝ src is an unscripted namespace
         :EndIf

         opts.watch←'none'   ⍝ prevent tying to the files
         opts.source←'ns'
         opts.ns←ns
         opts.dir←dir

         (fixed failed)←opts U.WriteFiles src dest array opts.overwrite

         :If ~single
             msg←⊂'Exported: ',ns,' → ',U.WinSlash dir
             :If ×≢failed ⋄ msg,←(⊂(⍕≢failed),' failed:'),failed ⋄ :EndIf
         :ElseIf ×≢failed ⋄ msg←⊂'Export failed: ',⊃failed
         :Else ⋄ msg←⊂'Exported: ',src,' → ',U.WinSlash fixed
         :EndIf
         msg←1↓U.FmtLines msg
     :EndIf
 :Else
     U.Resignal 1
 :EndTrap
