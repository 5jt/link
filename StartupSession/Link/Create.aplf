 msg←{opts}Create(ns dir);arrow;container;emptydir;emptyns;fail;hasdir;hasns;links;nc;nsref;nsrefs;overwrite;rawns;rsi;warnmsg;xsi;⎕IO;⎕ML;dircreated;DEBUG;setconfig;setopts;z;json;config;rc
 ⎕IO ⎕ML←1 1
 preProcessOpts ⍝ Make sure opts is a namespace
 (msg setconfig)←dir Config.GetConfig '' opts
 →(0≠≢msg)⍴0
:If 2=DEBUG←{6::0 ⋄ ⍵.Debug.debug}setconfig
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG
     :Hold '⎕SE.Link.Links'   ⍝ functions that use ⎕SE.Link.Links must :Hold '⎕SE.Link.Links' to avoid e.g. wrong results in lookup
         :If 0=⎕NC'⎕SE.Link.Links'   ⍝ init links if necessary
             U.SetLinks ⍬
         :EndIf
         :If ~0∊⍴nsrefs←links←U.ErrorIfRestored U.GetLinks
             nsrefs←⍎¨links.ns
         :EndIf

         dircreated←0
         msg←⍕⍬⊤⍬ ⋄ rawns←ns ⋄ warnmsg←''
         (container ns)←(rsi xsi←⎕RSI ⎕XSI)U.ContainerNs ns

         opts←opts Config.MergeOpts setconfig ⍝ Merge configured options in
         :If 0=opts.⎕NC⊂'watch' ⋄ :AndIf ~Watcher.CanWatch ⍝ warn if not watching directory by default - will disappear when file crawler works
             opts.watch←'ns' ⍝ default to watch='ns' and warn about it
             :If U.IS180 ⋄ warnmsg←'.NET or .NetCore not available - watch defaults to ''ns'''
             :Else ⋄ warnmsg←'Dyalog v18.0 is required to watch directories with .NET or .NetCore - watch defaults to ''ns'''
             :EndIf
         :EndIf  ⍝ otherwise watch defaults to 'both'
         'setopts' ⎕NS ⎕OR 'opts' ⍝ Record options that were set for writing .linkconfig file
         opts←U.DefaultOpts opts

         :If hasdir←⎕NEXISTS dir
             :If 2=⊃1 ⎕NINFO dir
                 U.Error'Link must target a directory, not a file'
             :EndIf
             emptydir←0∊⍴⊃(⎕NINFO⍠1)dir,'/*'
         :Else ⋄ emptydir←1
         :EndIf

         :If hasns←¯9.1=nc←U.NameClass ns
         :AndIf ~opts.(preloaded∨flatten)
             :If ~emptyns←0∊⍴U.ListNames nsref←⍎ns  ⍝ some APL names defined
             :AndIf ~emptydir                       ⍝ some dir/files defined
             :AndIf (⊂opts.source)∊'auto' 'dir'     ⍝ will not erase dir
             ⍝ link issue #160: allow some APL names to be tied to source files when source is dir - typically happens when starting dyalog with load=boot.aplf - won't work with arrays
                 emptyns←emptyns U.EmptyNamespace nsref dir
             :EndIf
         :Else ⋄ emptyns←1
         :EndIf

         :If emptydir⍱emptyns  ⍝ link issue #230
             opts.(ns dir)←(ns dir)
             :If opts.preloaded
             :OrIf 0∊⍴⎕SE.Link.U.Diff opts
                 emptydir←emptyns←1  ⍝ allow link creation
             :EndIf
         :EndIf

         :If ~Watcher.CanWatch ⋄ :AndIf (⊂opts.watch)∊'both' 'dir' ⋄ :AndIf ⎕SE.Link.Test≢⊃⎕RSI  ⍝ ⎕SE.Link.Test is allowed to toy with file watching/crawling
             U.Error'Watching directories requires Dyalog v18.0 and either .NET or .NetCore'
         :ElseIf ¯1=nc   ⍝ invalid namespace
             U.Error'Not a properly named namespace: ',,⍕rawns
         :ElseIf ~hasdir ⋄ :AndIf opts.source≡'dir'
             U.Error'Source directory not found: ',dir
         :ElseIf ~hasns ⋄ :AndIf opts.source≡'ns'
             U.Error'Source namespace not found: ',ns
         :ElseIf ~emptyns ⋄ :AndIf opts.source≡'dir'
             U.Error'Destination namespace not empty: ',ns
         :ElseIf ~emptydir ⋄ :AndIf opts.source≡'ns'
             U.Error'Destination directory not empty: ',dir
         :ElseIf emptydir⍱emptyns ⋄ :AndIf opts.source≡'auto'
             U.Error'Cannot link a non-empty namespace to a non-empty directory: ',ns,' ←→ ',dir
         :ElseIf hasdir⍱hasns ⋄ :AndIf opts.source≡'auto'   ⍝ MK @ link issue #136 Q2 : would create a lot of dummy directories/namespaces on typos
             U.Error'Cannot link a non-existent namespace to a non-existent directory: ',ns,' ←→ ',dir
         :ElseIf 0=≢nsref←1 U.GetRefTo ns  ⍝ attempt to create namespace if it doesn't exist
             U.Error'Not a namespace: ',ns
         :ElseIf ~U.IsNamedRef nsref  ⍝ ns is name of unnamed namespace
             U.Error'Not a properly named namespace: ',ns
         :ElseIf U.IsScripted nsref
             U.Error'Cannot link to scripted namespaces: ',ns
         :ElseIf nsref∊nsrefs
             U.Error'Already linked: ',ns
         :ElseIf ~hasdir ⋄ :AndIf ~dircreated←3 ⎕MKDIR dir  ⍝ attempt to create directory if it doesn't exist
             U.Error'Directory not found: ',dir
         :ElseIf U.Slash⊃⌽dir
             U.Error'Trailing slash reserved for future extension'
         :EndIf
         :If opts.source≡'auto'  ⍝ detect actual source
             :If hasns<hasdir
             :OrIf (hasns=hasdir)∧(emptydir≤emptyns)  ⍝ if have both, see which is not empty, if both empty, dir wins
                 opts.source←'dir'                    ⍝ will also happen if neither exist
             :Else   ⍝ (hasns>hasdir)∨(hasns=hasdir)∧(emptydir>emptyns)
                 opts.source←'ns'
             :EndIf
         :EndIf
         :If ~0∊⍴warnmsg ⋄ ¯1 U.Warn warnmsg ⋄ :EndIf


         ⍝ We're all good; do it!
         opts.ns←ns←U.NormNs ns
         opts.dir←dir←0 U.NormDir dir
         msg←0⍴⊂''

         ⍝ Create a config file if folder is new or empty
         :If dircreated
         :OrIf 0=≢⊃⎕NINFO⍠1⊢ dir,'/*'
             z←⎕NS ''
             z.Settings←Config.ExpungeDefaultParams setopts
             z.Settings.⎕EX 'source' ⍝ Not a folder configuration option
             z Config.WriteConfig opts
         :EndIf

         :If ~dircreated ⍝ Update source flag cache
            :If 0=⊃(rc config)←Config.ReadConfigFile dir,'/.linkconfig'
               config Config.SetSourceFlags opts
            :EndIf
         :EndIf

         :Select opts.source
         :Case 'ns'
             :If 0≢opts.flatten ⋄ U.Error'flatten modifier requires source≡''dir''' ⋄ :EndIf
             :If 0≢opts.fastLoad ⋄ U.Warn'fastLoad modifier ignored when source≡''ns''' ⋄ :EndIf
             fail←2⊃opts U.WriteFiles ns dir 1 ⍝ we already checked the overwrite condition
             :If ×≢fail ⋄ msg,←(⊂(⍕≢fail),' export(s) failed:'),fail ⋄ :EndIf
         :Case 'dir'
             :If 0≢opts.arrays ⋄ U.Warn'arrays modifier ignored when source≡''dir''' ⋄ :EndIf
             :If 0≢opts.sysVars ⋄ U.Warn'sysVars modifier ignored when source≡''dir''' ⋄ :EndIf
             :If 1≢opts.preloaded
                 fail←2⊃opts U.FixFiles nsref dir 1 ⍝ we already checked the overwrite condition
                 :If ×≢fail ⋄ msg,←(⊂(⍕≢fail),' import(s) failed:'),U.WinSlash¨fail ⋄ :EndIf
             :EndIf
         :Else
             U.Error'Unknown source setting:'opts.source
         :EndSelect
         Config.RestoreFlags opts ⍝ Set Stop & Trace according to config
         opts.fastLoad←0  ⍝ fastLoad is observed only at load (FixFiles) time - affects U.DetermineAplName
         opts.restored←0  ⍝ set by WSLoaded
         arrow←U.LinkDisplay opts
         opts.⎕DF 1⌽'][',arrow
         Watcher.Watch opts  ⍝ first crawler may call Notify
         U.SetLinks links,opts  ⍝ set links after setting FileSystemWatcher
         ¯1 U.Log msg←1↓U.FmtLines(⊂'Linked: ',arrow,dircreated/⊂'[directory was created]'),((×≢msg)/⊂'ERRORS ENCOUNTERED:'),msg

         :If ⎕WSID≡'CLEAR WS'
         :AndIf #=nsref
             ⎕WSID←⎕SE.Link.U.(WinSlash Enslash)opts.dir
         :EndIf
     :EndHold
 :Else
     U.Resignal 1
 :EndTrap
