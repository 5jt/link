 version←Version
 version←'2.1.0-alpha'

 ⍝ Changes history

 ⍝ TODO
 ⍝ - clean up ⎕SE.Link into ⎕SE.Link.U to have as few non-public names as possible
 ⍝ - create should return link namespace, whose display form has creation status
 ⍝ - FSW error recovery (no .NetCore support !)
 ⍝ - alternative names for -fastLoad : -fixOnce -noCheck -noInspect
 ⍝ - DONE fastLoad should not affect Fix and Notify
 ⍝ - normalise API results
 ⍝ - turn Serialise into ,↓Serialise
 ⍝ - DONE optimise FixFiles→DetermineAplName¨
 ⍝   - cache opts used by DetermineAplName
 ⍝   - that includes StripCaseCode which looses much time with U.debug, :Trap anyways
 ⍝   - same thing with DetermineFileName → CaseCode
 ⍝ - use :Holds to synchronise access to ⎕SE.Link.Links
 ⍝ - FileWatcher.Break should break all at once : (EnableRaisingEvents←0) (⎕DL) (Dispose)

 ⍝ RFE
 ⍝ - proper logging of errors and warnings, with accessible backlog - to check no errors during a working session.
 ⍝ - remember ties between arrays and files (could be stored in ⎕SE.Link.Links.arrays)
 ⍝ - add Ignore - requires ignore list in ⎕SE.Link.Links.ignored)
 ⍝ - Add should support non-existing names (added to ⎕SE.Link.Links.added)
 ⍝ - inotify on linux
 ⍝ - add Pause/Resume ? to disable watcher ? and editor callbacks ?
 ⍝ - add crawlers (file and namespace) - costy in code complexity and performance : Link would spend a fraction of the CPU time looking for changes that don't exist

 ⍝ Version 2.1.0
 ⍝ - TODO beforeWrite split into two callbacks : beforeWrite and getFilename
 ⍝   TODO specify them
 ⍝ - beforeRead may use 'loaded' as event type when loading directory (so not truely a file change event)
 ⍝ - Name class is reported as ¯9 for traditional namespaces (linked to directories)
 ⍝   Scripted namespaces remain of name class 9.1 (linked to files)
 ⍝   Use Link.NameClass to get it. Name class is also reported in beforeWrite/getFilename callbacks
 ⍝ - Link.Break now breaks all children namespaces by default, so that Link.Break # breaks all link in the workspace.
 ⍝   This behaviour can be overriden with the -exact flag which makes it unlink only argument directories and non of their children.
 ⍝ - Link.Break also has a -all flag to break all links
 ⍝ - -fastLoad flag to reduce the load time by not inspecting source to detect name clashes
 ⍝   This affects only initial directory loading, but not subsequent editor or file system watcher events.
 ⍝   Worth doing for very large projects with expert users that don't produce name clashes.
 ⍝   Side effects (again, only at initial load time, not at subsequent events):
 ⍝   - good: load will be significantly faster because files will be fixed exactly once in their final destination
 ⍝   - bad: forceFileNames/forceExtensions won't be observed
 ⍝   - bad: clashing names won't be detected - files names must match apl names - files may silently overwrite each other's definition if they define the same name
 ⍝   - bad: beforeWrite(getFilename=1) may report nc=0

 ⍝ Version 2.0.0
 ⍝ - initial public release
