:Namespace Config ⍝ Code for dealing with config files

⍝ Note that U.DefaultOpts contains related functionality
⍝      that should perhaps be brought in here.

    LinkParams←1 2⍴'watch' 'both'
    LinkParams⍪←'arrays' 0
    LinkParams⍪←'sysVars' 0
    LinkParams⍪←'forceExtensions' 0
    LinkParams⍪←'forceFilenames' 0
    LinkParams⍪←'caseCode' 0
    LinkParams⍪←'flatten' 0
    LinkParams⍪←'beforeWrite' ''
    LinkParams⍪←'beforeRead' ''
    LinkParams⍪←'getFilename' ''
    LinkParams⍪←'codeExtensions' ''
    LinkParams⍪←'customExtensions' ''
    LinkParams⍪←'typeExtensions' ''
    LinkParams⍪←'fastLoad' 0

    DebugParams←'notify' 'debug',⍪0 0

    ∇ config WriteConfig file;json;ns;m;nss  
    ⍝ Clean up and write config
    ns←⎕NS ⎕OR 'config' ⍝ Do not modify the argument

    :If 2=⎕NC 'ns.SourceFlags' 
    :AndIf 0=≢ns.SourceFlags 
        ns.⎕EX 'SourceFlags' ⍝ No flags
    :EndIf                  
    
    m←0=≢¨{0::⍬ ⋄ ns⍎⍵,'.⎕NL -2 9'}¨nss←'Debug' 'Settings'
    ns.⎕EX m/nss ⍝ Expunge empty namepaces
  
    json←1 ⎕JSON⍠('Dialect' 'JSON5')('HighRank' 'Split')('Compact' 0)⊢ns
    (⊂json)⎕NPUT file 1    
    ∇

    ∇ msg←FormatOptions config;obj;trace;stop;name
       msg←''
       :If 9=⎕NC 'config.Debug'
           msg,←⊂'Debug     : ',⍕config.Debug.({⍵,':',⍕⍎⍵}¨⎕NL -2)
       :EndIf
       
       :If 9=⎕NC 'config.Settings'
           msg,←⊂'Settings  : ',⍕config.Settings.({⍵,':',⍕⍎⍵}¨⎕NL -2)
       :EndIf
       
       :If 2=⎕NC  'config.SourceFlags'
           msg,←⊂'Stop/Trace:'
           :For obj :In config.SourceFlags    
                (name stop trace)←obj.{6::⍬ ⋄ ⍎⍵}¨'Name' 'Stop' 'Trace'
                :If (0≠≢name)∧(∨/0≠≢¨stop trace) ⍝ Something to report
                     msg,←⊂'   ',name,'[',(⍕stop),'/',(⍕trace),']'
                :EndIf
           :EndFor
       :EndIf       
    ∇

    ∇ ns←ExpungeDefaultParams ns;values;names;m
      :If 0≠≢names←ns.⎕NL-2
          values←¯1↓ns⍎⍕names,1↑names
          m←values≡¨(LinkParams[;2],⎕NULL)[LinkParams[;1]⍳names]
          ns.⎕EX m/names ⍝ remove settings which are default
      :EndIf
    ∇

    ∇ r←UserConfig
     ⍝ Return user configuration
     ⍝ /// In the future, we will cache  CONFIG and watch the config file
      ⍝ :If 0=⎕NC 'CONFIG'
      CONFIG←GetConfig''
     ⍝ :EndIf
     
      r←CONFIG
    ∇

    ∇ config←{linkdir}GetConfig userfile;userdir;z;rc;dir;linkfile;config;names;p;valid
     ⍝ Return configuration namespaces, blending user configuration file with optional link directory config
     ⍝ config[1] is options actually set
     ⍝ config[2] hs defaults filled in
     ⍝
     ⍝ GetConfig '' ⍝ returns user config from default location
     ⍝ GetConfig '/some/folder/.linkconfig' ⍝ Reads specific
     
      :If 0=≢userfile        ⍝ Config file not given
          :If 0=##.⎕NC'USERCONFIGFILE'
              USERCONFIGFILE←''
          :Else
              userfile←##.USERCONFIGFILE ⍝ Allow e.g. QA to override user config file
          :EndIf
      :AndIf 0=≢userfile
          userfile←##.U.UserConfigFile
      :EndIf
     
      :If ⎕NEXISTS userfile
          (rc config)←ReadConfigFile userfile
      :Else
          (rc config)←0 (⎕NS '')
      :EndIf
     
      :If rc≠0
          config ⎕SIGNAL 11
      :EndIf
     
      :If 2=⎕NC'linkdir'
      :AndIf 0≠≢linkdir
      :AndIf ⎕NEXISTS linkfile←linkdir,'/.linkconfig'
          (rc dir)←ReadConfigFile linkfile
          :If rc≠0
              dir ⎕SIGNAL 11
          :EndIf
     
          ⍝ Overwrite user config with directory config
          'config.Settings'⎕NS ⎕OR'dir.Settings'
          'config.Debug'⎕NS ⎕OR'dir.Debug'
     
          :If ~∧/(names←config.Settings.⎕NL-2)∊valid←(p←LinkParams)[;1]
              →0⊣(rc config)←1('Unknown Setting(s) in "',file,'": ',⍕names~valid)
          :EndIf
     
          :If ~∧/(names←config.Debug.⎕NL-2)∊valid←(p←DebugParams)[;1]
              →0⊣(rc config)←1('Unknown Debug options in "',file,'": ',⍕names~valid)
          :EndIf
     
      :EndIf
    ∇

    ∇ (rc config)←ReadConfigFile file;valid;names;m;p;json;one
     ⍝ Read a configuration file and return a namespace
     
      :If ~⎕NEXISTS file
          →0⊣(rc config)←1('Unable to find configuration file "',file,'"')
      :EndIf
     
      :Trap 0
          config←0 ⎕JSON⍠('Hierarchy' 0)('Dialect' 'JSON5')⊢json←⊃⎕NGET file 0
      :Else
          →0⊣(rc config)←1('Invalid configuration file: "',file,'": ',⎕DMX.Message)
      :EndTrap
     
      :If ~∧/(names←config.⎕NL-2 9)∊valid←'Settings' 'Debug' 'SourceFlags'
          →0⊣(rc config)←1('Unknown section in "',file,'": valid are ',⍕names~valid)
      :EndIf                                                  
      one←1=≢names←valid~names,⊂'SourceFlags'
      ⍎(×≢names)/'config.(',(⍕names),')←',(one/'⊃'),'⎕NS¨(⍴names)⍴⊂'''''
      :If 0=⎕NC 'config.SourceFlags' ⋄ config.SourceFlags←⍬ ⋄ :EndIf
      rc←0
    ∇

    ∇ ns ApplyDefaults params;names;values
      (names values)←↓⍉(~params[;1]∊ns.⎕NL-2)⌿params
      ⍎(×≢names)/'ns.(',(⍕names),')←values'
    ∇

    ∇ merged←opts MergeOpts config
     ⍝ Add settings from the user configuration into Link Function options
      :If 9=⎕NC'config.Settings'
          merged←0 ⎕JSON 1 ⎕JSON config.Settings ⍝ Clone settings ns
          'merged'⎕NS ⎕OR'opts'                  ⍝ Overwrite options with explicit switch settings
      :Else
          merged←opts
      :EndIf
    ∇

    ∇ (rc msg)←config MergeSettings settings;names;p;values;params;m;i;type;numeric;nums;key;ns;j;delete;old;ref;d
     ⍝ Merge settings in form name1:value name2:value into config namespace
     
      rc←1 ⍝ Pessimistic
      names←(¯1+p←settings⍳¨':')↑¨settings
      values←p↓¨settings
      old←(≢values)⍴⊂''
      params←(1,LinkParams)⍪2,DebugParams
      :If ∨/m←(≢params)<i←params[;2]⍳names
          →0⊣msg←'unknown configuration option(s): ',⍕m/names
      :EndIf           
      delete←(d←0=≢¨values)/names
      ⍝ (i values names)←(~delete)/¨i values names
      numeric←⍸(~d)∧0=⊃¨params[i;3]
      nums←⎕VFI¨values[numeric]
      :If ∨/m←~(⊃¨nums)∊⊂,1 ⍝ 1 valid numbers
          →0⊣msg←'invalid option settings: ',⍕m/values
      :EndIf
      values[numeric]←⊃¨2⊃¨nums
     
      :For (ns key) :In ('Settings' 1)('Debug' 2)
          :If 0≠≢j←⍸key=params[i;1] ⍝ Settings or Debug   
              ref←⍎'config.',ns
              old[j]←ref⍎¨'{6::'''' ⋄'∘,¨names[j],¨⊂'}⍬'
              ref.⎕EX delete
          :AndIf 0≠≢j←(~d[j])/j                                 
              ⍎'ref.(',(⍕names[j]),')←',(1≠≢j)↓'⊃values[j]'
          :EndIf
      :EndFor          

      rc←0⊣msg←'Was ',⍕names,¨':',¨⍕¨old
    ∇



:EndNamespace
