 msg←{opts}Import(ns src);defopts;dir;failed;files;fixed;nsref;single;⎕IO;⎕ML
 ⎕IO ⎕ML←1 1
 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG↓0
     (defopts←⎕NS ⍬).(overwrite)←0
     opts←defopts U.DefaultOpts⍎⎕NS∘⍬⍣(900⌶⍬)⊢'opts' ⍝ monadic?
     :If ~opts.overwrite∊0 1 ⋄ U.Error'Invalid value ',(⍕opts.overwrite),' for modifier "overwrite" - must be one of: 0 1' ⋄ :EndIf
     opts.watch←'none'  ⍝ prevent tying to the files
     opts.source←'dir'
     ns←⊃⌽⎕RSI ⎕XSI U.ContainerNs ns

     files←opts U.FindFile src  ⍝ candidates for source file
     :If 0=≢files
         U.Error'Source not found: ',src
     :ElseIf 1<≢files
         U.Error'More than one source found for ',src,': ',U.FmtLines files
     :ElseIf 0=≢nsref←(1 U.GetRefTo)ns ⍝ must be normal namespace
         U.Error'Not a namespace: ',ns
     :Else
         src←⊃files
         opts.ns←ns←U.NormNs ns
         :If single←1≠1 ⎕NINFO src ⋄ dir←¯1↓⊃⎕NPARTS src←0 U.NormFile src  ⍝ single file
         :Else ⋄ dir←src←0 U.NormDir src   ⍝ directory
         :EndIf
         opts.dir←dir

         (fixed failed)←opts U.FixFiles nsref src opts.overwrite

         :If ~single
             msg←⊂'Imported: ',ns,' ← ',U.WinSlash dir
             :If ×≢failed ⋄ msg,←⊂(⊂(⍕≢failed),' failed:'),U.WinSlash¨failed ⋄ :EndIf
         :ElseIf ×≢failed ⋄ msg←⊂'Import failed: ',⊃U.WinSlash failed
         :Else ⋄ msg←⊂'Imported: ',(⊃fixed),' ← ',U.WinSlash src
         :EndIf
         msg←1↓U.FmtLines msg
     :EndIf
 :Else
     U.Resignal 1
 :EndTrap
